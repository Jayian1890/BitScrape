{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Refresh Test Explorer",
            "type": "shell",
            "command": "cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug && cmake --build build",
            "group": {
                "kind": "test",
                "isDefault": true
            },
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "focus": true
            },
            "problemMatcher": []
        },
        {
            "label": "Run All Tests",
            "type": "shell",
            "command": "cmake --build build --config Debug && cd build && ./bin/types_test && ./bin/event_test && ./bin/beacon_test && ./bin/bencode_test && ./bin/network_test && ./bin/bittorrent_test",
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "focus": true
            },
            "problemMatcher": []
        },
        {
            "label": "Run Foundation Tests",
            "type": "shell",
            "command": "cmake --build build --config Debug && cd build && ./bin/types_test && ./bin/event_test && ./bin/beacon_test && ./bin/bencode_test && ./bin/network_test",
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "focus": true
            },
            "problemMatcher": []
        },
        {
            "label": "Run Protocol Tests",
            "type": "shell",
            "command": "cmake --build build --config Debug && cd build && ./bin/bittorrent_test",
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "focus": true
            },
            "problemMatcher": []
        },
        {
            "label": "Run Types Tests",
            "type": "shell",
            "command": "cmake --build build --config Debug --target types_test && cd build && ./bin/types_test",
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "focus": true
            },
            "problemMatcher": []
        },
        {
            "label": "Run Event Tests",
            "type": "shell",
            "command": "cmake --build build --config Debug --target event_test && cd build && ./bin/event_test",
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "focus": true
            },
            "problemMatcher": []
        },
        {
            "label": "Run Beacon Tests",
            "type": "shell",
            "command": "cmake --build build --config Debug --target beacon_test && cd build && ./bin/beacon_test",
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "focus": true
            },
            "problemMatcher": []
        },
        {
            "label": "Run Bencode Tests",
            "type": "shell",
            "command": "cmake --build build --config Debug --target bencode_test && cd build && ./bin/bencode_test",
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "focus": true
            },
            "problemMatcher": []
        },
        {
            "label": "Run Network Tests",
            "type": "shell",
            "command": "cmake --build build --config Debug --target network_test && cd build && ./bin/network_test",
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "focus": true
            },
            "problemMatcher": []
        },
        {
            "label": "Run BitTorrent Tests",
            "type": "shell",
            "command": "cmake --build build --config Debug --target bittorrent_test && cd build && ./bin/bittorrent_test",
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "focus": true
            },
            "problemMatcher": []
        },
        {
            "label": "cmake: configure (debug)",
            "type": "shell",
            "command": "cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug",
            "group": "build",
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "focus": true
            },
            "problemMatcher": []
        },
        {
            "label": "cmake: configure (release)",
            "type": "shell",
            "command": "cmake -S . -B build -DCMAKE_BUILD_TYPE=Release",
            "group": "build",
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "focus": true
            },
            "problemMatcher": []
        },
        {
            "label": "cmake: configure (debug with ASAN)",
            "type": "shell",
            "command": "cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug -DENABLE_ASAN=ON",
            "group": "build",
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "focus": true
            },
            "problemMatcher": []
        },
        {
            "label": "cmake: build",
            "type": "shell",
            "command": "cmake --build build --config ${input:buildType}",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "focus": true
            },
            "problemMatcher": {
                "owner": "cpp",
                "fileLocation": [
                    "relative",
                    "${workspaceFolder}/build"
                ],
                "pattern": {
                    "regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error|note|fatal error):\\s+(.*)$",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "severity": 4,
                    "message": 5
                }
            }
        },
        {
            "label": "cmake: clean",
            "type": "shell",
            "command": "rm -rf build && cmake -S . -B build",
            "group": "build",
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "focus": true
            },
            "problemMatcher": []
        },
        {
            "label": "cmake: test",
            "type": "shell",
            "command": "cd build && ctest --output-on-failure",
            "group": {
                "kind": "test",
                "isDefault": true
            },
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "focus": true
            },
            "problemMatcher": []
        },
        {
            "label": "cmake: rebuild",
            "type": "shell",
            "command": "cmake --build build --config ${input:buildType} --clean-first",
            "group": "build",
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "focus": true
            },
            "problemMatcher": {
                "owner": "cpp",
                "fileLocation": [
                    "relative",
                    "${workspaceFolder}/build"
                ],
                "pattern": {
                    "regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error|note|fatal error):\\s+(.*)$",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "severity": 4,
                    "message": 5
                }
            }
        },
        {
            "label": "cmake: build cli",
            "type": "shell",
            "command": "cmake --build build --config ${input:buildType} --target bitscrape_cli",
            "group": "build",
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "focus": true
            },
            "problemMatcher": {
                "owner": "cpp",
                "fileLocation": [
                    "relative",
                    "${workspaceFolder}/build"
                ],
                "pattern": {
                    "regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error|note|fatal error):\\s+(.*)$",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "severity": 4,
                    "message": 5
                }
            }
        },
        {
            "label": "cmake: build gui",
            "type": "shell",
            "command": "cmake --build build --config ${input:buildType} --target bitscrape_gui",
            "group": "build",
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "focus": true
            },
            "problemMatcher": {
                "owner": "cpp",
                "fileLocation": [
                    "relative",
                    "${workspaceFolder}/build"
                ],
                "pattern": {
                    "regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error|note|fatal error):\\s+(.*)$",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "severity": 4,
                    "message": 5
                }
            }
        },
        {
            "label": "cmake: build module test",
            "type": "shell",
            "command": "cmake --build build --config ${input:buildType} --target ${input:moduleDir}_test",
            "group": "build",
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "focus": true
            },
            "problemMatcher": {
                "owner": "cpp",
                "fileLocation": [
                    "relative",
                    "${workspaceFolder}/build"
                ],
                "pattern": {
                    "regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error|note|fatal error):\\s+(.*)$",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "severity": 4,
                    "message": 5
                }
            }
        },
        {
            "label": "cmake: test module",
            "type": "shell",
            "command": "cd build && ctest -R ${input:moduleDir}_test --output-on-failure",
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "focus": true
            },
            "problemMatcher": []
        },
        {
            "label": "cmake: generate compile_commands.json",
            "type": "shell",
            "command": "cmake -S . -B build -DCMAKE_EXPORT_COMPILE_COMMANDS=ON",
            "group": "none",
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "focus": true
            },
            "problemMatcher": []
        },
        {
            "label": "cmake: clean up debug",
            "type": "shell",
            "command": "echo 'Debug session ended'",
            "group": "none",
            "presentation": {
                "reveal": "silent",
                "panel": "shared",
                "focus": false
            },
            "problemMatcher": []
        }
    ],
    "inputs": [
        {
            "id": "moduleDir",
            "type": "pickString",
            "description": "Select the module",
            "options": [
                "bencode",
                "beacon",
                "bittorrent",
                "core",
                "dht",
                "event",
                "network",
                "storage",
                "types"
            ]
        },
        {
            "id": "buildType",
            "type": "pickString",
            "description": "Select build type",
            "default": "Debug",
            "options": [
                "Debug",
                "Release",
                "RelWithDebInfo",
                "MinSizeRel"
            ]
        }
    ]
}
