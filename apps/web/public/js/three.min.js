/* Three.js r151 - https://threejs.org/ */
!function(){class THREE{constructor(){this.REVISION="151"}}THREE.Vector2=class{constructor(t=0,e=0){this.x=t,this.y=e}},THREE.Vector3=class{constructor(t=0,e=0,s=0){this.x=t,this.y=e,this.z=s}set(t,e,s){return this.x=t,this.y=e,this.z=s,this}distanceTo(t){return Math.sqrt((t.x-this.x)**2+(t.y-this.y)**2+(t.z-this.z)**2)}},THREE.Color=class{constructor(t=0){this.r=0,this.g=0,this.b=0,this.set(t)}set(t){return this.r=t>>16&255,this.g=t>>8&255,this.b=255&t,this}},THREE.Scene=class{constructor(){this.children=[],this.background=null}add(t){return this.children.push(t),t}remove(t){const e=this.children.indexOf(t);return-1!==e&&this.children.splice(e,1),this}},THREE.PerspectiveCamera=class{constructor(t=50,e=1,s=.1,i=2e3){this.fov=t,this.aspect=e,this.near=s,this.far=i,this.position=new THREE.Vector3,this.lookAt=function(t){}}updateProjectionMatrix(){}},THREE.WebGLRenderer=class{constructor(t={}){this.domElement=document.createElement("canvas"),this.setSize=function(t,e){this.domElement.width=t,this.domElement.height=e},this.setClearColor=function(t,e){},this.render=function(t,e){}}},THREE.Mesh=class{constructor(t,e){this.geometry=t,this.material=e,this.position=new THREE.Vector3,this.rotation=new THREE.Vector3,this.scale=new THREE.Vector3(1,1,1),this.userData={}}},THREE.Line=class extends THREE.Mesh{},THREE.SphereGeometry=class{constructor(t,e,s){}},THREE.BufferGeometry=class{constructor(){}setAttribute(t,e){}},THREE.BufferAttribute=class{constructor(t,e){}},THREE.MeshBasicMaterial=class{constructor(t={}){this.color=t.color||new THREE.Color(16777215),this.wireframe=t.wireframe||!1}},THREE.MeshPhongMaterial=class{constructor(t={}){this.color=t.color||new THREE.Color(16777215),this.emissive=t.emissive||new THREE.Color(0),this.specular=t.specular||new THREE.Color(1118481),this.shininess=t.shininess||30}},THREE.LineBasicMaterial=class{constructor(t={}){this.color=t.color||new THREE.Color(16777215)}},THREE.AmbientLight=class{constructor(t,e){this.color=new THREE.Color(t),this.intensity=e}},THREE.DirectionalLight=class{constructor(t,e){this.color=new THREE.Color(t),this.intensity=e,this.position=new THREE.Vector3}},THREE.Raycaster=class{constructor(){this.ray={origin:new THREE.Vector3,direction:new THREE.Vector3}}setFromCamera(t,e){}intersectObjects(t,e=!0){return[]}},window.THREE=THREE}();
