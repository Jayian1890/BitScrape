/* Chart.js v3.9.1 - https://www.chartjs.org */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).Chart=e()}(this,(function(){"use strict";function t(){return{datasets:{type:!1,label:"",data:[],backgroundColor:"rgba(0,0,0,0.1)",borderColor:"rgba(0,0,0,0.1)",borderWidth:1,tension:0,fill:!1},scales:{x:{type:"category",display:!0},y:{type:"linear",display:!0,beginAtZero:!0}},plugins:{legend:{display:!0,position:"top"},tooltip:{enabled:!0}},animation:{duration:1e3},responsive:!0,maintainAspectRatio:!0}}const e={bar:function(e,i){const s=t();return s.type="bar",s.data=e,s.options=i||{},s},line:function(e,i){const s=t();return s.type="line",s.data=e,s.options=i||{},s},pie:function(e,i){const s=t();return s.type="pie",s.data=e,s.options=i||{},s},doughnut:function(e,i){const s=t();return s.type="doughnut",s.data=e,s.options=i||{},s},polarArea:function(e,i){const s=t();return s.type="polarArea",s.data=e,s.options=i||{},s},radar:function(e,i){const s=t();return s.type="radar",s.data=e,s.options=i||{},s},scatter:function(e,i){const s=t();return s.type="scatter",s.data=e,s.options=i||{},s},bubble:function(e,i){const s=t();return s.type="bubble",s.data=e,s.options=i||{},s}};class i{constructor(t,i,s){this.type=t,this.data=i,this.options=s||{},this.chart=null}render(t){this.chart=new Chart(t,{type:this.type,data:this.data,options:this.options})}}class Chart{constructor(t,s){if("string"==typeof t&&(t=document.getElementById(t)),!t||!t.getContext)throw new Error("Invalid canvas element");this.ctx=t.getContext("2d"),this.canvas=t,this.config=s,this.data=s.data||{},this.options=s.options||{},this.type=s.type,this.plugins=[],this.tooltip={},this.legend={},this.title={},this.scales={},this.metasets=[],this.boxes=[],this.currentDevicePixelRatio=1,this.aspectRatio=1,this.height=t.height,this.width=t.width,this.chartArea={left:0,top:0,right:this.width,bottom:this.height},this._active=[],this._lastEvent=null,this.initialize()}initialize(){return this.bindEvents(),this.update(),this}bindEvents(){const t=this,e=t.canvas;e.addEventListener("click",(function(e){t._eventHandler(e)})),e.addEventListener("mousemove",(function(e){t._eventHandler(e)})),e.addEventListener("mouseout",(function(e){t._eventHandler(e)})),e.addEventListener("mousedown",(function(e){t._eventHandler(e)})),e.addEventListener("mouseup",(function(e){t._eventHandler(e)}))}update(t){return this._draw(),this}render(t){return this._draw(),this}_draw(){const t=this;t.clear(),t._drawBackground(),t._drawDatasets(),t._drawTooltip(),t._drawTitle(),t._drawLegend(),t._drawScales()}_drawBackground(){const t=this,e=t.ctx,i=t.canvas;e.save(),e.fillStyle=t.options.backgroundColor||"white",e.fillRect(0,0,i.width,i.height),e.restore()}_drawDatasets(){const t=this,e=t.ctx,i=t.data,s=i.datasets||[];e.save();for(let i=0;i<s.length;i++){const n=s[i],a=n.data||[],o=n.backgroundColor||"rgba(0,0,0,0.1)",r=n.borderColor||"rgba(0,0,0,0.1)",l=n.borderWidth||1;e.fillStyle=o,e.strokeStyle=r,e.lineWidth=l,e.beginPath();for(let t=0;t<a.length;t++){const i=a[t],s=t/a.length*t.chartArea.width,n=t.chartArea.bottom-i/100*t.chartArea.height;0===t?e.moveTo(s,n):e.lineTo(s,n)}e.stroke(),n.fill&&e.fill()}e.restore()}_drawTooltip(){}_drawTitle(){}_drawLegend(){}_drawScales(){}clear(){const t=this,e=t.ctx,i=t.canvas;e.clearRect(0,0,i.width,i.height)}destroy(){const t=this,e=t.canvas;e.removeEventListener("click",t._eventHandler),e.removeEventListener("mousemove",t._eventHandler),e.removeEventListener("mouseout",t._eventHandler),e.removeEventListener("mousedown",t._eventHandler),e.removeEventListener("mouseup",t._eventHandler),t.tooltip.destroy(),t.legend.destroy(),t.title.destroy(),t.scales.destroy(),t.metasets=[],t.boxes=[],t._active=[],t._lastEvent=null,t.chart=null,t.ctx=null,t.canvas=null}_eventHandler(t){}}return Chart.helpers={},Chart.defaults={},Chart.instances={},Chart.controllers={},Chart.registry={},Chart.version="3.9.1",Chart.Chart=Chart,Chart.Element=class{},Chart.Animation=class{},Chart.Animator=class{},Chart.layouts={},Chart.platforms={},Chart.plugins={},Chart.scale={},Chart.scales={},Chart.Ticks={},Chart.defaults={},Chart.registry={},Chart.controllers={},Chart.helpers={},Chart.instances={},Chart.layouts={},Chart.platforms={},Chart.plugins={},Chart.scales={},Chart.Ticks={},Chart}));
